/* ----------------------Seccion de declaraciones package e imports--------------------*/

import java_cup.runtime.*;
import java.util.*;

/* ----------------------Seccion componentes de codigo de usuario --------------------*/


/* ------------Declaracion de la lista de simbolos de la gramatica-----------*/


terminal Integer numero, damage;
terminal String ident, enemigos, use, time, alto, ancho, inicio, end, 
monedas;
terminal llave_a, llave_c, coma, punto_coma, parenta, parentc;

non terminal S, DIMENSION, DIRECTIVAS, BLOQUE, INICIO, FINAL, MONEDAS, MONEDA, ENEMIGOS, ENEMIGO,
	DEF_MONEDAS, DEF_ENEMIGOS, LOC_MONEDAS, LOC_ENEMIGOS, LOC_MONEDA, LOC_ENEMIGO, LOCALIZACION;
non terminal Coordenada COORD;


/* -------------Declaracion de precedencias -----------*/



/* --------------Declaracion de la gramatica -----------*/

S ::= ident DIMENSION DIRECTIVAS DEF_MONEDAS BLOQUE 
	| ident DIMENSION DIRECTIVAS DEF_ENEMIGOS BLOQUE
	| ident DIMENSION DIRECTIVAS DEF_MONEDAS DEF_ENEMIGOS BLOQUE
	| ident DIMENSION DIRECTIVAS BLOQUE	 ;

DIRECTIVAS ::= use ident time numero;

DIMENSION ::= alto numero ancho numero 
	| numero numero;

DEF_MONEDAS ::= monedas llave_a MONEDAS llave_c ;

MONEDAS ::= MONEDA punto_coma MONEDAS 
	| MONEDA punto_coma;

MONEDA ::= ident numero;

DEF_ENEMIGOS ::= enemigos llave_a ENEMIGOS llave_c ;

ENEMIGOS ::= ENEMIGO punto_coma ENEMIGOS
	| ENEMIGO punto_coma;

ENEMIGO ::= ident damage;

/*BLOQUE ::= llave_a INICIO FINAL LOC_MONEDAS LOC_ENEMIGOS llave_c
	| llave_a INICIO FINAL  LOC_MONEDAS llave_c
	| llave_a INICIO FINAL LOC_ENEMIGOS llave_c
	| llave_a INICIO FINAL llave_c ;*/

BLOQUE ::= llave_a INICIO FINAL LOCALIZACION llave_c;

//INICIO ::= inicio COORD:ca punto_coma;
INICIO ::= inicio COORD punto_coma;

//FINAL ::= final COORD:ca punto_coma
FINAL ::= end COORD punto_coma;

/*LOC_MONEDAS ::= LOC_MONEDA punto_coma LOC_MONEDAS
	| LOC_MONEDA punto_coma;*/

LOCALIZACION ::=  ident COORD punto_coma {:System.out.println("Loc leida");:};

/*LOC_ENEMIGOS ::= LOC_ENEMIGO punto_coma
	| LOC_ENEMIGO punto_coma LOC_ENEMIGOS;*/

//LOC_ENEMIGO ::= ident COORD punto_coma;

COORD ::= parenta numero coma numero parentc {:System.out.println("Coordenada leida");:};
/* 
 COORD ::= parenta numero:x coma numero:y parentc {: Coordenada coordini=new Coordenada(x,y); RESULT=coordini; 
						   System.out.println("Coord X: "+coordini.getCoordX()+" Posición Y: "+coordini.getCoordY()); :}; 





			{: Coordenada coordfin=new Coordenada(cf.getCoordX(),cf.getCoordY()); RESULT=coordfin; 
						   System.out.println("Final Posición X: "+coordfin.getCoordX()+" Posición Y: "+coordfin.getCoordY()); :};

I ::= parenta number:n1 coma number:n2 parentc	{: Coordenada coordini=new Coordenada(n1,n2); RESULT=coordini; 
						   System.out.println("Inicial Posición X: "+coordini.getCoordX()+" Posición Y: "+coordini.getCoordY()); :};

P ::= mleft coma L P:ca				{: Coordenada coord=new Coordenada(ca.getCoordX(),ca.getCoordY()); RESULT=coord; :};
P ::= mright coma R P:ca			{: Coordenada coord=new Coordenada(ca.getCoordX(),ca.getCoordY()); RESULT=coord; :};
P ::= mup coma U P:ca				{: Coordenada coord=new Coordenada(ca.getCoordX(),ca.getCoordY()); RESULT=coord; :};
P ::= mdown coma D P:ca				{: Coordenada coord=new Coordenada(ca.getCoordX(),ca.getCoordY()); RESULT=coord; :};


P ::= mleft					{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
							coord.setCoordX(coord.getCoordX()-1);
							coord.setCoordY(coord.getCoordY());
 							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;  :};

P ::= mright					{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
							coord.setCoordX(coord.getCoordX()+1);
							coord.setCoordY(coord.getCoordY());
 							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;  :};

P ::= mdown					{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
							coord.setCoordX(coord.getCoordX());
							coord.setCoordY(coord.getCoordY()-1);
 							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;  :};

P ::= mup					{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
							coord.setCoordX(coord.getCoordX());
							coord.setCoordY(coord.getCoordY()+1);
 							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;   :}; 


L ::= 						{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
							coord.setCoordX(coord.getCoordX()-1); 
							coord.setCoordY(coord.getCoordY());
							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;    :};

R ::= 						{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
							coord.setCoordX(coord.getCoordX()+1); 
							coord.setCoordY(coord.getCoordY());
							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;    :};

D ::= 						{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
							coord.setCoordX(coord.getCoordX()); 
							coord.setCoordY(coord.getCoordY()-1);
							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;    :};

U ::= 						{: Coordenada coord= (Coordenada)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
							coord.setCoordX(coord.getCoordX()); 
							coord.setCoordY(coord.getCoordY()+1);
							System.out.println("Posicion X: "+coord.getCoordX()+" Posición Y: "+coord.getCoordY());
							RESULT=coord;    :};

*/